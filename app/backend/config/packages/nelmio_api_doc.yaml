when@dev:
  nelmio_api_doc:
    areas: # to filter documented areas
      path_patterns:
        - ^/api(?!/doc$) # Accepts routes under /api except /api/doc
      host_patterns: # document only routes with a host of the form api.*
        - ^api\.

    documentation:
      info:
        title: BookHelper API
        description: BookHelper API
        version: 1.0.0
      paths:
        /api/get_info:
          get:
            tags:
              - Info
            summary: 'Get info'
            description: 'Get info'
            responses:
              200:
                description: 'Successful operation'
              400:
                description: 'Invalid tag value'

        /api/genre/create:
          post:
            tags:
              - Api
            summary: 'Add genre'
            description: 'Add genre'
            requestBody:
              required: true
              content:
                application/x-www-form-urlencoded:
                  schema:
                    type: object
                    properties:
                      name:
                        type: string
                    required:
                      - name
            responses:
              200:
                description: 'Successful operation'
              400:
                description: 'Invalid tag value'

        /api/book/create:
          post:
            tags:
              - Api
            summary: 'Add book'
            description: 'Add book'
            requestBody:
              required: true
              content:
                application/x-www-form-urlencoded:
                  schema:
                    type: object
                    properties:
                      name:
                        type: string
                      genre:
                        type: integer
                      cost:
                        type: float
                      age_rating:
                        type: string
                        enum:
                          - 0
                          - 6
                          - 12
                          - 16
                          - 18
                    required:
                      - name
                      - genre
                      - age_rating
                      - cost
            responses:
              200:
                description: 'Successful operation'
              400:
                description: 'Invalid tag value'

        /api/get_books:
          post:
            tags:
              - Api
            summary: 'Get books'
            description: 'Get books'
            requestBody:
              required: true
              content:
                application/json:
                  schema:
                    type: array
                    items:
                      type: string
                    example: '{"author_id": 18, "genre_id": 11, "cost": {"min": 1, "max": 500}, "language_id": 49, "year": 2024, "age_rating": 6, "sort": "DESC", "number_of_page": {"min": 1, "max": 1000}}'

            responses:
              200:
                description: 'Successful operation'
              400:
                description: 'Invalid tag value'
